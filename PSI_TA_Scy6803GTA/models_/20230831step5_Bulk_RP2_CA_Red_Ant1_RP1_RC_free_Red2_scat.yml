# default_megacomplex: decay
dataset_groups:
  default:
    residual_function: variable_projection
    link_clp: True

dataset:
  # TA datasets
  670TR1:
    megacomplex: [complex670, doas,artifact670]
    # megacomplex: [complex670, doas, artifact670]
    # megacomplex_scale: [scalem.1,scalem.free]
    initial_concentration: input670
    irf: irf1
    scale: scale.670
  670TR2:
    # megacomplex: [complex670TR2]
    megacomplex: [complex670]
    # megacomplex_scale: [scalem.1,scalem.free]
    initial_concentration: input670
    irf: irf1
    scale: scale.670TR2
  700TR1:
    megacomplex: [complex700, artifact700]
    # megacomplex: [complex700, artifact700]
    # megacomplex_scale: [scalem.1]
    initial_concentration: input700
    irf: irf2
    scale: scale.700
  700TR2:
    # megacomplex: [complex700TR2]
    megacomplex: [complex700]
    # megacomplex_scale: [scalem.1]
    initial_concentration: input700
    irf: irf2
    scale: scale.700TR2
  Ant1SADS:
    megacomplex:
      - mc1
    scale: scale.Ant1SADS
  RP1SADS:
    megacomplex:
      - mc5
    scale: scale.RP1SADS
  # RP2SADS:
  #   megacomplex:
  #     - mc6
  #   scale: scale.RP2SADS
  # RP2aSADS:
  #   megacomplex:
  #     - mc7
  #   scale: scale.RP2aSADS
  Red1SADS:
    megacomplex:
      - mc2
    scale: scale.Red1SADS
  Red2SADS:
    megacomplex:
      - mc3
    scale: scale.Red2SADS
  RCSADS:
    megacomplex:
      - mc4
    scale: scale.RCSADS
  freeSADS:
    megacomplex:
      - mc8
    scale: scale.freeSADS

megacomplex:
  complex670:
    type: decay
    k_matrix: [kmWL]
  complex700:
    type: decay
    k_matrix: [kmWL,kscat]
  artifact670:
    type: coherent-artifact
    order: 3
    width: artifact.CAwidth
  artifact700:
    type: coherent-artifact
    order: 3
  doas:
    type: damped-oscillation
    labels: [osc1]
    frequencies: [osc.freq.1]
    rates: [osc.rates.1]
  mc1:
    dimension: time
    target: Ant1
    type: clp-guide
  mc2:
    dimension: time
    target: Red1
    type: clp-guide
  mc3:
    dimension: time
    target: Red2
    type: clp-guide
  mc4:
    dimension: time
    target: RC
    type: clp-guide
  mc5:
    dimension: time
    target: RP1
    type: clp-guide
  # mc6:
  #   dimension: time
  #   target: RP2
  #   type: clp-guide
  # mc7:
  #   dimension: time
  #   target: RP2a
  #   type: clp-guide
  mc8:
    dimension: time
    target: free
    type: clp-guide
# note that earlier definition will override later definition
k_matrix:
  kmWL:
    matrix:
      (Bulk, Red1): rates.ToBulkFromRed1
      (Red1, Bulk): rates.ToRed1FromBulk
      (Bulk, Red2): rates.ToBulkFromRed2
      (Red2, Bulk): rates.ToRed2FromBulk
      (Ant1, Ant1): rates.kF
      (Red1, Red1): rates.kF
      (Red2, Red2): rates.kF
      (Bulk, Bulk): rates.kF
      (RC, RC): rates.kF
      (RC, RP1): rates.ToRCFromRP1
      (RP1, RC): rates.ToRP1FromRC
      (Bulk, RC): rates.ToBulkFromRC
      (RC, Bulk): rates.ToRCFromBulk
      (Bulk, Ant1): rates.ToBulkFromAnt1
      (Ant1, Bulk): rates.ToAnt1FromBulk
      (free, free): rates.kF
      (RP2, RP1): rates.ToRP2FromRP1
      (RP2, RP2): rates.ToRP2FromRP2
  kscat:
    matrix:
      (scat, scat): rates.ToRP2FromRP2

initial_concentration:
  # unique for TA
  input670:
    compartments: [Ant1, Bulk, Red1, Red2, RC, RP1, RP2, free]
    parameters:
      [
        input670.Ant1,
        input670.Bulk,
        input670.Red1,
        input670.Red2,
        input670.RC,
        input670.0,
        input670.0,
        input670.free,
      ]
    exclude_from_normalize: [free]
  input700:
    compartments: [Ant1, Bulk, Red1, Red2, RC, RP1, RP2, free,scat]
    parameters:
      [
        input700.0,
        input700.Bulk,
        input700.Red1,
        input700.Red2,
        input700.RC,
        input700.0,
        input700.0,
        input700.0,
        input700.Bulk,
      ]
    exclude_from_normalize: [scat]

clp_constraints:
  - type: zero
    target: free
    interval:
      # - [681, 762]
      - [690, 762]
  - type: zero
    target: scat
    interval:
      - [600, 697]
  - type: zero
    target: scat
    interval:
      - [707, 800]

irf:
  irf1:
    type: spectral-gaussian
    center: irf.center1
    width: irf.width1
    dispersion_center: irf.dispcenter
    center_dispersion_coefficients: [irf.disp1]
    model_dispersion_with_wavenumber: true
  irf2:
    type: spectral-gaussian
    center: irf.center2
    width: irf.width2
    dispersion_center: irf.dispcenter
    center_dispersion_coefficients: [irf.disp1]
    model_dispersion_with_wavenumber: true

# weights:
#   # unique for TA
#   - datasets: [RedSADS]
#     # if omitted the weight applies everywhere
#     global_interval: [100, 1000]
#     # this would be time
#     # model_interval: [100, 1000]
#     value: 6.e-5
#     # value: 6.e-3
#   # - datasets: [Red2SADS]
#   #   global_interval: [100, 1000]
#   #   value: 6.e-3
#   - datasets: [RCSADS]
#     global_interval: [100, 1000]
#     # value: 6.e-3
#     value: 6.e-5
#   - datasets: [RP1SADS]
#     global_interval: [100, 1000]
#     # value: 6.e-3
#     value: 6.e-6
weights:
  - datasets: [Ant1SADS]
    global_interval: [100, 1000]
    value: 0.3
  - datasets: [RP1SADS]
    global_interval: [100, 1000]
    value: 1.
  - datasets: [RP2SADS,RP2aSADS]
    global_interval: [100, 1000]
    value: 1.
  - datasets: [RCSADS]
    global_interval: [100, 1000]
    value: 0.5
  - datasets: [Red1SADS,Red2SADS]
    global_interval: [100, 1000]
    value: 0.15