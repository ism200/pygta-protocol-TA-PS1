# default_megacomplex: decay
dataset_groups:
  default:
    residual_function: variable_projection
    link_clp: True

dataset:
  # TA datasets
  700TR1:
    # megacomplex: [complex700]
    megacomplex: [complex700, artifact700]
    # megacomplex_scale: [scalem.1]
    initial_concentration: input700
    irf: irf2
    scale: scale.700
  700TR2:
    # megacomplex: [complex700TR2]
    megacomplex: [complex700]
    # megacomplex_scale: [scalem.1]
    initial_concentration: input700
    irf: irf2
    scale: scale.700TR2

megacomplex:
  # unique for TA
  complex700:
    type: decay
    k_matrix: [km700]
  artifact700:
    type: coherent-artifact
    order: 3

# how can i now express that the first 20 lines
# are common for complexes 1-5, and the next 11 lines
# are common for complexes 1-4? how can i specify in chunks?
# note that earlier definition will override later definition
k_matrix:
  km700:
    matrix:
      (r2, r1): rates.k21
      (r3, r2): rates.k32
      (r4, r3): rates.k43
      (r4, r4): rates.k44
      # (r5, r5): rates.k55

initial_concentration:
  # unique for TA r1,
  input700:
    compartments: [r1,r2,r3,r4]
    parameters:
      [
        input.1,
        # input.0,
        input.0,
        input.0,
        input.0,
      ]

# 6 needed ! does this mean that the penalty is s1-s2*area.1 ?
# clp_penalties:
#   - type: equal_area
#     source: Red1
#     source_intervals: [[690, 740]]
#     target: Bulk
#     target_intervals: [[675, 770]]
#     parameter: area.Bulk
#     weight: 0.06
#   - type: equal_area
#     source: Red1
#     source_intervals: [[690, 740]]
#     target: Red2
#     target_intervals: [[700, 780]]
#     parameter: area.1
#     weight: 0.06
#   - type: equal_area
#     source: Red1
#     source_intervals: [[690, 740]]
#     target: WLRC
#     target_intervals: [[685, 725]]
#     parameter: area.1
#     weight: 0.06
#

# clp_relations:
#   #
#   - source: WLRP2
#     target: WLRP2a
#     parameter: rel.r1
#     interval: [[0, 1000]]

# clp_constraints:
#   # - type: zero
#   #   target: Ant1
#   #   interval:
#   #     - [700, 715]
#   - type: zero
#     target: freeChl
#     interval:
#       - [690, 731]
#   - type: zero
#     target: freeChl
#     interval:
#       - [750, 760]

# it is implicitly normalized, i.e. divided by sum of irfscale parameters
irf:
  irf2:
    type: spectral-gaussian
    center: irf.center2
    width: irf.width2
    dispersion_center: irf.dispcenter
    center_dispersion_coefficients: [irf.disp1]
    model_dispersion_with_wavenumber: true

# weights:
#   # unique for TA
#   - datasets: [Red1SADS]
#     # if omitted the weight applies everywhere
#     global_interval: [100, 1000]
#     # this would be time
#     # model_interval: [100, 1000]
#     value: 6.e-3
#   - datasets: [Red2SADS]
#     global_interval: [100, 1000]
#     value: 6.e-3
#   - datasets: [WLRCSADS]
#     global_interval: [100, 1000]
#     value: 6.e-3
#   - datasets: [WLRP1SADS]
#     global_interval: [100, 1000]
#     value: 6.e-3
